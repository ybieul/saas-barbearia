// Corre√ß√£o direta: desativar automa√ß√µes de reativa√ß√£o
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  try {
    console.log('üîß Desativando automa√ß√µes de reativa√ß√£o...')
    
    // Desativar todas as automa√ß√µes de reativa√ß√£o
    const result = await prisma.$executeRaw`
      UPDATE automation_settings 
      SET isEnabled = false 
      WHERE automationType = 'reactivation'
    `
    
    console.log(`‚úÖ Desativadas ${result} automa√ß√µes de reativa√ß√£o`)
    
    // Verificar contagem atual por tenant
    const activeAutomations = await prisma.automationSetting.groupBy({
      by: ['establishmentId'],
      _count: {
        id: true
      },
      where: {
        isEnabled: true
      }
    })
    
    console.log('üìä Automa√ß√µes ativas por tenant ap√≥s corre√ß√£o:')
    activeAutomations.forEach(tenant => {
      console.log(`Tenant ${tenant.establishmentId}: ${tenant._count.id} automa√ß√µes ativas`)
    })
    
    console.log('\n‚úÖ Corre√ß√£o conclu√≠da! O card agora deve mostrar a contagem correta.')
    
  } catch (error) {
    console.error('‚ùå Erro:', error)
  } finally {
    await prisma.$disconnect()
  }
}

main()
