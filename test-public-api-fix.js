// Teste de corre√ß√£o da p√°gina p√∫blica
console.log('üß™ Testando corre√ß√£o da p√°gina p√∫blica:');

// Simular um Date object do Prisma (21:00)
const appointmentDate = new Date(2025, 7, 12, 21, 0, 0, 0);

console.log('üìÖ Agendamento no banco:', appointmentDate.toString());
console.log('üìÖ Hor√°rio esperado na p√°gina p√∫blica: 21:00');

// ANTES (problem√°tico) - extractTimeFromDateTime(toLocalISOString(apt.dateTime))
function oldApiMethod(date) {
  // Simular toLocalISOString
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const day = String(date.getDate()).padStart(2, '0');
  const hours = String(date.getHours()).padStart(2, '0');
  const minutes = String(date.getMinutes()).padStart(2, '0');
  const seconds = String(date.getSeconds()).padStart(2, '0');
  const milliseconds = String(date.getMilliseconds()).padStart(3, '0');
  const isoString = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}.${milliseconds}Z`;
  
  // Simular extractTimeFromDateTime
  const cleanDateTime = isoString.replace('Z', '').replace('T', ' ');
  const [datePart, timePart] = cleanDateTime.split(' ');
  const [year2, month2, day2] = datePart.split('-').map(Number);
  const [hours2, minutes2] = timePart.split(':').map(Number);
  const parsedDate = new Date(year2, month2 - 1, day2, hours2, minutes2);
  
  return `${String(parsedDate.getHours()).padStart(2, '0')}:${String(parsedDate.getMinutes()).padStart(2, '0')}`;
}

// DEPOIS (correto) - extractTimeFromDateObject(apt.dateTime)
function newApiMethod(date) {
  const hours = String(date.getHours()).padStart(2, '0');
  const minutes = String(date.getMinutes()).padStart(2, '0');
  return `${hours}:${minutes}`;
}

const oldApiResult = oldApiMethod(appointmentDate);
const newApiResult = newApiMethod(appointmentDate);

console.log('\n‚ùå ANTES (API com dupla convers√£o):');
console.log('API retorna startTime:', oldApiResult);
console.log('P√°gina p√∫blica mostra:', oldApiResult);

console.log('\n‚úÖ DEPOIS (API com acesso direto):');
console.log('API retorna startTime:', newApiResult);
console.log('P√°gina p√∫blica mostra:', newApiResult);

console.log('\nüîç Resultado:');
console.log('Esperado: 21:00');
console.log('Antigo:', oldApiResult, oldApiResult === '21:00' ? '‚úÖ' : '‚ùå');
console.log('Novo:', newApiResult, newApiResult === '21:00' ? '‚úÖ' : '‚ùå');

if (newApiResult === '21:00') {
  console.log('\nüéØ SUCESSO: P√°gina p√∫blica agora mostra hor√°rio correto de 21:00!');
} else {
  console.log('\n‚ö†Ô∏è ATEN√á√ÉO: Ainda h√° problemas na convers√£o');
}
