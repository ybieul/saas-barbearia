import cron from 'node-cron';
import { sendWhatsappReminders } from './whatsapp-reminders-cron';
import { cleanupOrphanedInstances } from './whatsapp-instance-gc';

console.log('‚úÖ Agendador (Scheduler) de tarefas foi iniciado com sucesso.');
console.log('üïê Executando lembretes a cada 5 minutos...');
console.log('üßπ Executando limpeza de inst√¢ncias √≥rf√£s a cada 5 minutos...');
console.log('üåç Timezone: America/Sao_Paulo');

// Validar se a express√£o cron est√° correta
if (!cron.validate('*/5 * * * *')) {
  console.error('‚ùå Express√£o cron inv√°lida!');
  process.exit(1);
}

// Agenda a tarefa para ser executada a cada 5 minutos
cron.schedule('*/5 * * * *', async () => {
  const now = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' });
  console.log(`\n[${now}] === üöÄ INICIANDO TAREFA AGENDADA: Verifica√ß√£o de Lembretes ===`);

  try {
    await sendWhatsappReminders(); 
    console.log(`[${now}] === ‚úÖ TAREFA AGENDADA CONCLU√çDA COM SUCESSO ===\n`);
  } catch (error) {
    console.error(`[${now}] === ‚ùå ERRO NA EXECU√á√ÉO DA TAREFA AGENDADA ===`);
    console.error('Stack trace:', error);
    console.log(`[${now}] === üîÑ CONTINUANDO AGENDAMENTO (pr√≥xima execu√ß√£o em 5 minutos) ===\n`);
  }
}, {
  timezone: 'America/Sao_Paulo'
});

// === COLETOR DE LIXO R√ÅPIDO PARA INST√ÇNCIAS WHATSAPP ===
// Agenda limpeza de inst√¢ncias √≥rf√£s a cada 5 minutos
console.log('üßπ Configurando coletor de lixo para inst√¢ncias WhatsApp...');
cron.schedule('*/5 * * * *', async () => {
  const now = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' });
  console.log(`\n[${now}] === üßπ INICIANDO COLETOR DE LIXO: Limpeza de Inst√¢ncias WhatsApp ===`);

  try {
    await cleanupOrphanedInstances();
    console.log(`[${now}] === ‚úÖ COLETOR DE LIXO CONCLU√çDO COM SUCESSO ===\n`);
  } catch (error) {
    console.error(`[${now}] === ‚ùå ERRO NO COLETOR DE LIXO ===`);
    console.error('Stack trace:', error);
    console.log(`[${now}] === üîÑ CONTINUANDO AGENDAMENTO (pr√≥xima limpeza em 5 minutos) ===\n`);
  }
}, {
  timezone: 'America/Sao_Paulo'
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\n‚èπÔ∏è  Recebido sinal de interrup√ß√£o. Encerrando agendador...');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\n‚èπÔ∏è  Recebido sinal de termina√ß√£o. Encerrando agendador...');
  process.exit(0);
});
